{"version":3,"file":"static/js/523.2efa336b.chunk.js","mappings":"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","sources":["assets/data/QuestionsList.js","helpers/hooks/useFetchData.js","components/timer/Timer.jsx","components/question-options/Options.jsx","components/pages/QuizPage.jsx","components/pages/ResultPage.jsx","helpers/constants/index.js","helpers/functions/index.js"],"sourcesContent":["export const filmQuiz = [\r\n    {\r\n        question: \"Who is the main protagonist of Top Gun: Maverick?\",\r\n        id: 1,\r\n        options: [\r\n            {\r\n                answer: 'Steve Carell',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Tom Cruise',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'Jean-Claude Van Damme',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'James P. Sullivan',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Which option is a quote from the Fast and Furious franchise?\",\r\n        id: 2,\r\n        options: [\r\n            {\r\n                answer: 'What a lame franchise',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Vin Diesel was born to be bald',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Ride or die',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'Die or ride',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Were Ross and Rachel on a break in Friends TV Series?\",\r\n        id: 3,\r\n        options: [\r\n            {\r\n                answer: 'How dare u ask that',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'They were on a breaaaaak',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Not really',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n            {\r\n                answer: 'There is no clear answer to this question to this day',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Is Interstellar movie about interstellar travel?\",\r\n        id: 4,\r\n        options: [\r\n            {\r\n                answer: 'No, it is about environmental problems',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Yes, it mostly is',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'No, it is about Star Wars',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'No, it is about Michael Caine being old',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"What is the complete name of the Thor movie released in the year 2022?\",\r\n        id: 5,\r\n        options: [\r\n            {\r\n                answer: 'Thor: Love and I can not be bothered',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Thor: Love and Death ',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Thor: Love and Thunder',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'Thor: Love and The Douchebag',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Which movie below is based on a novel?\",\r\n        id: 6,\r\n        options: [\r\n            {\r\n                answer: 'The Green Mile',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'Toy story 4',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Pitch perfect',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Ted',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"What did the movie I Am Mother focus on?\",\r\n        id: 7,\r\n        options: [\r\n            {\r\n                answer: 'A mother',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Artificial intelligence',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'War',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Climate change',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Who is batman?\",\r\n        id: 8,\r\n        options: [\r\n            {\r\n                answer: 'Superman',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'I think he is Harley Quinn',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'He is a horse actually',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n            {\r\n                answer: 'A man dressed as a bat',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Was lightning McQueen the fastest car in the Cars movie released in the year 2006?\",\r\n        id: 9,\r\n        options: [\r\n            {\r\n                answer: 'No, actually he was the fastest moron',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Yes he was',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'No, Not as fast as Doc Hudson',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'No, Chick Hicks was',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Hugh Jackman is most famous for what exactly?\",\r\n        id: 10,\r\n        options: [\r\n            {\r\n                answer: 'Playing as Wolverine',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'Being a good boy',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Playing as Darth vader',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Being Australian',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Which movie is not a sci-fi film?\",\r\n        id: 11,\r\n        options: [\r\n            {\r\n                answer: 'Road To Perdition',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'Dune',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Chappie',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: '12 Monkeys',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Which one in not a member of The Simpson family?\",\r\n        id: 12,\r\n        options: [\r\n            {\r\n                answer: 'Homer',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Marge',\r\n                correct: true,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Moe',\r\n                correct: false,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'Lisa',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Which one is a famous quote from the joker?\",\r\n        id: 13,\r\n        options: [\r\n            {\r\n                answer: 'All you care about is chicken nuggies',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Let us put a smile on that face',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Why so serious',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'I love you batman',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Did they save Mark Watney at the end of The Martian?\",\r\n        id: 14,\r\n        options: [\r\n            {\r\n                answer: 'No, they left him to rot there',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'He was high, so he was not on mars , just high',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'No they hated him',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n            {\r\n                answer: 'Yes, yes they did',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Did you like Scarlett Johansson in The Prestige?\",\r\n        id: 15,\r\n        options: [\r\n            {\r\n                answer: 'No, I hate her in general',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'meh...',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Yes, Chose this option if you want to win the game',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'No, the hell with her',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Which movie did tom cruise not star in?\",\r\n        id: 16,\r\n        options: [\r\n            {\r\n                answer: 'Mission: Impossible 1',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Mission: Impossible 2',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Mission: Possible 4',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n            {\r\n                answer: 'Mission: Impossible 3',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Chris Evans is most famous for playing as:\",\r\n        id: 17,\r\n        options: [\r\n            {\r\n                answer: 'Captain America',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'Captain Italia',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Hot guy in in The Nanny Diaries',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Some lame movie I do not even remember',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Who is more famous , Chris Hemsworth or Me?\",\r\n        id: 18,\r\n        options: [\r\n            {\r\n                answer: 'Omg, you are',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Chris, Chris is more famous buddy',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'Takes courage to ask such thing',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'You can not be serious?',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"So , Don't Look Up , what is it about?\",\r\n        id: 19,\r\n        options: [\r\n            {\r\n                answer: 'It is about boring me to death',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Blah blah',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'It is more than just an asteroid heading towards the earth',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n            {\r\n                answer: 'meh...',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Which one is not a comic character?\",\r\n        id: 20,\r\n        options: [\r\n            {\r\n                answer: 'Bruce wayne',\r\n                correct: false,\r\n                id: 11,\r\n            },\r\n            {\r\n                answer: 'Selina kyle',\r\n                correct: false,\r\n                id: 33,\r\n            },\r\n            {\r\n                answer: 'Lex luthor',\r\n                correct: false,\r\n                id: 22,\r\n            },\r\n            {\r\n                answer: 'The real slim shady',\r\n                correct: true,\r\n                id: 44,\r\n            },\r\n        ]\r\n    },\r\n]","import { useEffect, useState } from \"react\";\r\nimport { randomize } from \"helpers/functions\";\r\nimport { filmQuiz } from \"assets/data/QuestionsList\"\r\nimport { QOUESTION_LIMIT } from \"helpers/constants\";\r\n\r\nconst UseFetchData = (callBack = () => { }) => {\r\n    const [result, setResult] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    //mocks a fetch data API call\r\n    const fetchData = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setResult(randomize(filmQuiz, QOUESTION_LIMIT));\r\n            callBack()\r\n            setLoading(false);\r\n        }, 1000);\r\n    }\r\n\r\n    return { loading, result }\r\n}\r\n\r\nexport default UseFetchData","import React, { useRef, useEffect } from \"react\";\r\nimport { QOUESTION_LIMIT } from \"helpers/constants\";\r\nimport { Card, CardBody, Row } from \"reactstrap\";\r\nimport { Colxx } from \"components/common/Colxx\";\r\nconst CountdownTimer = ({ limit, num, setNum, count }) => {\r\n  let intervalRef = useRef();\r\n\r\n  const decreaseNum = () => setNum((prev) => (prev <= 0 ? limit : prev - 1));\r\n\r\n  useEffect(() => {\r\n    intervalRef.current = setInterval(decreaseNum, 1000);\r\n    return () => clearInterval(intervalRef.current);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (count === QOUESTION_LIMIT) {\r\n      setNum(0);\r\n      return () => clearInterval(intervalRef.current);\r\n    }\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"text-center\">\r\n        <Colxx xs=\"12\" sm=\"4\" md=\"3\" lg=\"2\">\r\n          <Card className=\"timer-card\">\r\n            <CardBody>\r\n              <h4 className=\"timer-num\">Timer : {num}</h4>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default CountdownTimer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { CardBody } from \"reactstrap\";\r\nimport { TIMER_LIMIT } from \"helpers/constants\";\r\nimport { randomize } from \"helpers/functions\";\r\n\r\nconst QuestionOptions = ({\r\n  options,\r\n  num,\r\n  createAnswerModel,\r\n  removeOption,\r\n  setRemoveOption,\r\n}) => {\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n  const [answerOptions, setAnswerOptions] = useState(options);\r\n\r\n  const createSelectedOption = (id, correct) => {\r\n    setSelectedValue(id);\r\n    createAnswerModel(id, correct);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (num === TIMER_LIMIT) {\r\n      setSelectedValue(\"\");\r\n    }\r\n  }, [num]);\r\n\r\n  useEffect(() => {\r\n    setAnswerOptions(options);\r\n  }, [options]);\r\n\r\n  useEffect(() => {\r\n    if (removeOption) removeTwoOptions();\r\n  }, [removeOption]);\r\n\r\n  const removeTwoOptions = () => {\r\n    let finalOptions = [];\r\n    let correctOption = answerOptions.find(\r\n      (element) => element.correct === true\r\n    );\r\n    let wrongOptions = answerOptions.filter(\r\n      (element) => element.correct === false\r\n    );\r\n    let randomWrongOption = randomize(wrongOptions, 1);\r\n    finalOptions.push(correctOption);\r\n    finalOptions.push(randomWrongOption[0]);\r\n    setAnswerOptions(finalOptions);\r\n    setRemoveOption(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardBody>\r\n        {answerOptions.map((item, i) => (\r\n          <div\r\n            className={`cursor--pointer question-text mt-4 question-option ${\r\n              item.id === selectedValue ? \"option-selected\" : \"\"\r\n            }`}\r\n            tabindex=\"1\"\r\n            onClick={() => createSelectedOption(item.id, item.correct)}\r\n          >\r\n            {i + 1 + \". \" + item.answer}\r\n          </div>\r\n        ))}\r\n      </CardBody>\r\n    </div>\r\n  );\r\n};\r\nexport default QuestionOptions;\r\n","import { useEffect, useState } from \"react\";\r\nimport UseFetchData from \"helpers/hooks/useFetchData\";\r\nimport { Card, CardBody, Row, Button } from \"reactstrap\";\r\nimport { Colxx } from \"components/common/Colxx\";\r\nimport CountdownTimer from \"components/timer/Timer\";\r\nimport LoadingComp from \"components/common/Loading\";\r\nimport { TIMER_LIMIT, QOUESTION_LIMIT, ADDED_TIME } from \"helpers/constants\";\r\nimport QuestionOptions from \"components/question-options/Options\";\r\nimport ResultPage from \"./ResultPage\";\r\n\r\nconst QuizPage = () => {\r\n  const Data = UseFetchData();\r\n  const [count, setCount] = useState(0); //counts number of questions\r\n  const [num, setNum] = useState(TIMER_LIMIT); //is the countdown timer number which is shown every second\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [removeOption, setRemoveOption] = useState(false);\r\n  const [removeOptionClicked, setRemoveOptionClicked] = useState(false);\r\n  const [addedTime, setAddedTime] = useState(0);\r\n  const [addedTimeClicked, setAddedTimeClicked] = useState(false);\r\n  var addedTimeTimeout = null;\r\n\r\n  useEffect(() => {\r\n    if (!Data.loading) {\r\n      handleQuestions();\r\n    }\r\n  }, [num]);\r\n\r\n  useEffect(() => {\r\n    //is only called when user clicks add extra time button\r\n    if (addedTime === ADDED_TIME) {\r\n      addedTimeTimeout = setTimeout(() => {\r\n        setAddedTime(0);\r\n      }, num * 1000);\r\n    }\r\n    return;\r\n  }, [addedTime]);\r\n\r\n  const handleQuestions = () => {\r\n    if (num === TIMER_LIMIT + addedTime && count < QOUESTION_LIMIT) {\r\n      setCount(count + 1);\r\n      setAddedTime(0);\r\n    }\r\n  };\r\n\r\n  const createAnswerModel = (optionId = \"\", correct = false) => {\r\n    let answers = selectedAnswers;\r\n    let currentQuestionId = Data.result[count].id;\r\n    let existingAnswer = null;\r\n    let chosenAnswer = {\r\n      questionId: currentQuestionId,\r\n      optionId,\r\n      correct,\r\n      timeSpent:\r\n        addedTime > 0 ? TIMER_LIMIT - (num - addedTime) : TIMER_LIMIT - num,\r\n    };\r\n    if (selectedAnswers.length > 0) {\r\n      existingAnswer = answers.find(\r\n        (element) => element.questionId === currentQuestionId\r\n      );\r\n    }\r\n    if (!existingAnswer) {\r\n      answers.push(chosenAnswer);\r\n    } else {\r\n      let index = answers.indexOf(existingAnswer);\r\n      answers.splice(index, 1, chosenAnswer);\r\n    }\r\n    setSelectedAnswers(answers);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setNum(TIMER_LIMIT);\r\n    setAddedTime(0);\r\n    clearTimeout(addedTimeTimeout);\r\n  };\r\n\r\n  const handleAddedTime = () => {\r\n    setAddedTimeClicked(true);\r\n    setAddedTime(ADDED_TIME);\r\n    setNum(num + ADDED_TIME);\r\n  };\r\n\r\n  const handleRemoveOptions = () => {\r\n    setRemoveOption(true);\r\n    setRemoveOptionClicked(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!Data.loading ? (\r\n        <>\r\n          <div>\r\n            {count < QOUESTION_LIMIT ? (\r\n              <CountdownTimer\r\n                count={count}\r\n                num={num}\r\n                setNum={setNum}\r\n                limit={TIMER_LIMIT + addedTime}\r\n              />\r\n            ) : (\r\n              <Row className=\"m-auto\">\r\n                <Colxx>\r\n                  <ResultPage\r\n                    data={Data.result}\r\n                    selectedAnswers={selectedAnswers}\r\n                  />\r\n                </Colxx>\r\n              </Row>\r\n            )}\r\n          </div>\r\n          {count < QOUESTION_LIMIT && (\r\n            <Row className=\"d-flex justify-content-center\">\r\n              <Colxx lg=\"6\" md=\"10\">\r\n                <Card className=\"question-card mt-3\">\r\n                  <div>\r\n                    <CardBody>\r\n                      <Row>\r\n                        <Colxx sm=\"12\">\r\n                          <h4 className=\"question-text\">\r\n                            {count + 1} . {Data.result[count].question}{\" \"}\r\n                          </h4>\r\n                        </Colxx>\r\n                      </Row>\r\n                      <div>\r\n                        <Row>\r\n                          <Colxx sm=\"12\">\r\n                            <QuestionOptions\r\n                              removeOption={removeOption}\r\n                              setRemoveOption={setRemoveOption}\r\n                              num={num}\r\n                              createAnswerModel={createAnswerModel}\r\n                              options={Data.result[count].options}\r\n                            />\r\n                          </Colxx>\r\n                        </Row>\r\n                      </div>\r\n                    </CardBody>\r\n                  </div>\r\n                </Card>\r\n              </Colxx>\r\n            </Row>\r\n          )}\r\n          <div className=\"d-flex justify-content-center\">\r\n            {count < QOUESTION_LIMIT && (\r\n              <Row className=\"d-flex justify-content-center\">\r\n                <Colxx xs=\"10\" sm=\"10\" md=\"12\" lg=\"12\">\r\n                  <Button className=\"button-custom mt-2\" onClick={handleNext}>\r\n                    Next\r\n                  </Button>\r\n                </Colxx>\r\n                <Colxx xs=\"10\" sm=\"10\" md=\"6\" lg=\"6\">\r\n                  <Button\r\n                    className=\"button-lifeLine mt-2\"\r\n                    disabled={removeOptionClicked}\r\n                    onClick={handleRemoveOptions}\r\n                  >\r\n                    Remove Two Options\r\n                  </Button>\r\n                </Colxx>\r\n                <Colxx xs=\"10\" sm=\"10\" md=\"6\" lg=\"6\">\r\n                  <Button\r\n                    className=\"button-lifeLine mt-2\"\r\n                    disabled={addedTimeClicked}\r\n                    onClick={handleAddedTime}\r\n                  >\r\n                    Add extra 10 seconds\r\n                  </Button>\r\n                </Colxx>\r\n              </Row>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <LoadingComp />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default QuizPage;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Row, Card, CardBody, Button } from \"reactstrap\";\r\nimport { Colxx } from \"components/common/Colxx\";\r\nimport { TIMER_LIMIT } from \"helpers/constants\";\r\nimport { average } from \"helpers/functions\";\r\nconst ResultPage = ({ selectedAnswers }) => {\r\n  const [numCorrect, setNumCorrect] = useState(0);\r\n  const [quickestAnswer, setQuickestAnswer] = useState(0);\r\n  const [longestAnswer, setLongestAnswer] = useState(TIMER_LIMIT);\r\n  const [averageTimeSpent, setAverageTimeSpent] = useState(TIMER_LIMIT);\r\n\r\n  const findCorrectAnswers = (selectedAnswers) => {\r\n    let totalCorrectAnswers = 0;\r\n    let timeSpent = [];\r\n    selectedAnswers.map((item) => {\r\n      timeSpent.push(item.timeSpent);\r\n      if (item.correct) {\r\n        totalCorrectAnswers++;\r\n      }\r\n    });\r\n    if (timeSpent.length > 0) {\r\n      let min = Math.min(...timeSpent);\r\n      let max = Math.max(...timeSpent);\r\n      let avg = average(timeSpent);\r\n      setQuickestAnswer(min);\r\n      setLongestAnswer(max);\r\n      setAverageTimeSpent(avg);\r\n    }\r\n    setNumCorrect(totalCorrectAnswers);\r\n  };\r\n  useEffect(() => {\r\n    findCorrectAnswers(selectedAnswers);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Card className=\"result-card\">\r\n        <CardBody>\r\n          <h4 className=\"mb-2\">Your Result</h4>\r\n          <Row>\r\n            <Colxx>\r\n              <h4 className=\"result-text\">\r\n                Number of correct answers : {numCorrect}\r\n              </h4>\r\n            </Colxx>\r\n          </Row>\r\n          <Row>\r\n            <Colxx>\r\n              <h4 className=\"result-text\">\r\n                Number of incorrect answers :{\" \"}\r\n                {selectedAnswers.length - numCorrect}\r\n              </h4>\r\n            </Colxx>\r\n          </Row>\r\n          <Row>\r\n            <Colxx>\r\n              <h4 className=\"result-text\">\r\n                Number questions unanswered : {10 - selectedAnswers.length}\r\n              </h4>\r\n            </Colxx>\r\n          </Row>\r\n          {selectedAnswers.length > 0 && (\r\n            <>\r\n              <div className=\"mt-4 mb-2\">\r\n                <h4>Statistics About Answered Questions</h4>\r\n              </div>\r\n              {\r\n                <Row>\r\n                  <Colxx>\r\n                    <h4 className=\"result-text\">\r\n                      {quickestAnswer < 1 ? (\r\n                        <>Quickest answering time : Less than 1 second</>\r\n                      ) : (\r\n                        <>\r\n                          Quickest answering time : {quickestAnswer} second(s){\" \"}\r\n                        </>\r\n                      )}\r\n                    </h4>\r\n                  </Colxx>\r\n                </Row>\r\n              }\r\n              <Row>\r\n                <Colxx>\r\n                  <h4 className=\"result-text\">\r\n                    {longestAnswer < 1 ? (\r\n                      <>Longest answering time : Less than 1 second</>\r\n                    ) : (\r\n                      <>Longest answering time : {longestAnswer} second(s)</>\r\n                    )}\r\n                  </h4>\r\n                </Colxx>\r\n              </Row>\r\n              <Row>\r\n                <Colxx>\r\n                  <h4 className=\"result-text\">\r\n                    {averageTimeSpent < 1 ? (\r\n                      <>Average answering time : Less than 1 second</>\r\n                    ) : (\r\n                      <>Average answering time : {averageTimeSpent} second(s)</>\r\n                    )}\r\n                  </h4>\r\n                </Colxx>\r\n              </Row>\r\n            </>\r\n          )}\r\n          <Row className=\"d-flex justify-content-center mt-3\">\r\n            <Colxx md=\"12\" lg=\"5\">\r\n              <Button\r\n                className=\"button-custom mt-2\"\r\n                onClick={() => window.location.reload(false)}\r\n              >\r\n                Try Again\r\n              </Button>\r\n            </Colxx>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default ResultPage;\r\n","export const TIMER_LIMIT = 15\r\nexport const QOUESTION_LIMIT = 10\r\nexport const ADDED_TIME = 10","\r\n\r\nexport const randomize = (list = [], range = 0) => {\r\n    let questionList = [];\r\n    let tmp = [];\r\n    if (list && range) {\r\n        while (questionList.length < range) {\r\n            tmp.push(\r\n                list.splice(Math.floor(Math.random() * list.length - 1), 1)[0]\r\n            );\r\n            questionList.push(tmp.pop());\r\n        }\r\n    }\r\n    return (questionList);\r\n\r\n};\r\nexport const total = (arr) => {\r\n    let sum = 0;\r\n    if (arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            sum = sum + arr[i]\r\n        }\r\n    }\r\n    return (sum);\r\n}\r\n\r\nexport const average = (arr) => {\r\n    let avg = 0;\r\n    if (arr) {\r\n        if (arr.length > 0) {\r\n            avg = Math.round(total(arr) / arr.length)\r\n\r\n        }\r\n    }\r\n    return (avg);\r\n}"],"names":["filmQuiz","question","id","options","answer","correct","callBack","useState","result","setResult","loading","setLoading","useEffect","fetchData","setTimeout","randomize","QOUESTION_LIMIT","limit","num","setNum","count","intervalRef","useRef","decreaseNum","prev","current","setInterval","clearInterval","className","Colxx","xs","sm","md","lg","createAnswerModel","removeOption","setRemoveOption","selectedValue","setSelectedValue","answerOptions","setAnswerOptions","TIMER_LIMIT","removeTwoOptions","finalOptions","correctOption","find","element","wrongOptions","filter","randomWrongOption","push","map","item","i","tabindex","onClick","Data","UseFetchData","setCount","selectedAnswers","setSelectedAnswers","removeOptionClicked","setRemoveOptionClicked","addedTime","setAddedTime","addedTimeClicked","setAddedTimeClicked","addedTimeTimeout","handleQuestions","ADDED_TIME","Loading","ResultPage","data","optionId","answers","currentQuestionId","existingAnswer","chosenAnswer","questionId","timeSpent","length","index","indexOf","splice","clearTimeout","disabled","numCorrect","setNumCorrect","quickestAnswer","setQuickestAnswer","longestAnswer","setLongestAnswer","averageTimeSpent","setAverageTimeSpent","totalCorrectAnswers","min","Math","max","avg","average","findCorrectAnswers","window","location","reload","list","range","questionList","tmp","floor","random","pop","arr","round","sum","total"],"sourceRoot":""}